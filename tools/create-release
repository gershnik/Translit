#! /usr/bin/env -S python3 -u

# Copyright (c) 2023, Eugene Gershnik
# SPDX-License-Identifier: GPL-3.0-or-later


import sys
import re
import subprocess

from pathlib import Path
from datetime import date

MYPATH = Path(__file__).parent
ROOT = MYPATH.parent

NEW_VER = sys.argv[1]

components = [int(i) for i in NEW_VER.split('.')]
NEW_VER_NUM = components[0]*100 + components[1]

unreleased_link_pattern = re.compile(r"^\[Unreleased\]: (.*)$", re.DOTALL)
lines = []
with open(ROOT / "CHANGELOG.md", "rt", encoding='utf-8') as change_log:
    for line in change_log.readlines():
        # Move Unreleased section to new version
        if re.fullmatch(r"^## Unreleased.*$", line, re.DOTALL):
            lines.append(line)
            lines.append("\n")
            lines.append(
                f"## [{NEW_VER}] - {date.today().isoformat()}\n"
            )
        else:
            lines.append(line)
    lines.append(f'[{NEW_VER}]: https://github.com/gershnik/Translit/releases/v{NEW_VER}\n')

with open(ROOT / "CHANGELOG.md", "wt", encoding='utf-8') as change_log:
    change_log.writelines(lines)

lines = []
with open(ROOT / 'Version.xcconfig', 'r', encoding='utf-8') as verFile:
    for line in verFile:
        line = re.sub(r'^(\s*CURRENT_PROJECT_VERSION\s*=\s*)\d+(?:.\d+)*(\s*)$', fr'\g<1>{NEW_VER_NUM}\2', line)
        line = re.sub(r'^(\s*MARKETING_VERSION\s*=\s*)\d+(?:.\d+)*(\s*)$', fr'\g<1>{NEW_VER}\2', line)
        lines.append(line)

with open(ROOT / 'Version.xcconfig', "wt", encoding='utf-8') as verFile:
    verFile.writelines(lines)

subprocess.run(['git', 'add',
                ROOT / "CHANGELOG.md",
                ROOT / "Version.xcconfig"], check=True)
subprocess.run(['git', 'commit', '-m', f'chore: creating version {NEW_VER}'], check=True)
subprocess.run(['git', 'tag', f'v{NEW_VER}'], check=True)
